{"version":3,"file":"2-form.js","sources":["../src/js/2-form.js"],"sourcesContent":["window.addEventListener('DOMContentLoaded', () => {\n  const form = document.querySelector('.feedback-form');\n  const STORAGE_KEY = 'feedback-form-state';\n\n  if (!form) {\n    console.error('Form .feedback-form not found in DOM');\n    return;\n  }\n\n  // object with initial values\n  let formData = {\n    email: '',\n    message: '',\n  };\n\n  // data recovery from localStorage \n  try {\n    const saved = localStorage.getItem(STORAGE_KEY);\n    if (saved) {\n      const parsed = JSON.parse(saved);\n      // merge so keys always exist\n      formData = { ...formData, ...parsed };\n    }\n  } catch (err) {\n    console.error('Error parsing saved data:', err);\n  }\n\n  // safely find inputs \n  const emailEl = form.querySelector('[name=\"email\"]');\n  const messageEl = form.querySelector('[name=\"message\"]');\n\n  // restore to fields only if elements found\n  if (emailEl) emailEl.value = formData.email || '';\n  if (messageEl) messageEl.value = formData.message || '';\n\n  console.log('Restored formData:', formData);\n\n  // save on input \n  form.addEventListener('input', onInput);\n  form.addEventListener('change', onInput);\n\n  function onInput(event) {\n    const target = event.target;\n    if (!target) return;\n    const name = target.name;\n    if (!name) return; \n\n    const value = target.value.trim();\n    formData[name] = value;\n    try {\n      localStorage.setItem(STORAGE_KEY, JSON.stringify(formData));\n     \n      // debug\n      console.log('Saved to localStorage:', name, value, JSON.parse(localStorage.getItem(STORAGE_KEY)));\n    } catch (err) {\n      console.error('localStorage setItem error:', err);\n    }\n  }\n\n  // submit handler\n  form.addEventListener('submit', event => {\n    event.preventDefault();\n\n    // ensure up-to-date values \n    if (emailEl) formData.email = emailEl.value.trim();\n    if (messageEl) formData.message = messageEl.value.trim();\n\n    if (!formData.email || !formData.message) {\n      alert('Fill please all fields');\n      return;\n    }\n\n    console.log('Submit formData:', formData);\n\n    // clear\n    localStorage.removeItem(STORAGE_KEY);\n    form.reset();\n    formData = { email: '', message: '' };\n  });\n});\n"],"names":["form","STORAGE_KEY","formData","saved","parsed","err","emailEl","messageEl","onInput","event","target","name","value"],"mappings":"wFAAA,OAAO,iBAAiB,mBAAoB,IAAM,CAChD,MAAMA,EAAO,SAAS,cAAc,gBAAgB,EAC9CC,EAAc,sBAEpB,GAAI,CAACD,EAAM,CACT,QAAQ,MAAM,sCAAsC,EACpD,MACD,CAGD,IAAIE,EAAW,CACb,MAAO,GACP,QAAS,EACb,EAGE,GAAI,CACF,MAAMC,EAAQ,aAAa,QAAQF,CAAW,EAC9C,GAAIE,EAAO,CACT,MAAMC,EAAS,KAAK,MAAMD,CAAK,EAE/BD,EAAW,CAAE,GAAGA,EAAU,GAAGE,CAAM,CACpC,CACF,OAAQC,EAAK,CACZ,QAAQ,MAAM,4BAA6BA,CAAG,CAC/C,CAGD,MAAMC,EAAUN,EAAK,cAAc,gBAAgB,EAC7CO,EAAYP,EAAK,cAAc,kBAAkB,EAGnDM,IAASA,EAAQ,MAAQJ,EAAS,OAAS,IAC3CK,IAAWA,EAAU,MAAQL,EAAS,SAAW,IAErD,QAAQ,IAAI,qBAAsBA,CAAQ,EAG1CF,EAAK,iBAAiB,QAASQ,CAAO,EACtCR,EAAK,iBAAiB,SAAUQ,CAAO,EAEvC,SAASA,EAAQC,EAAO,CACtB,MAAMC,EAASD,EAAM,OACrB,GAAI,CAACC,EAAQ,OACb,MAAMC,EAAOD,EAAO,KACpB,GAAI,CAACC,EAAM,OAEX,MAAMC,EAAQF,EAAO,MAAM,KAAI,EAC/BR,EAASS,CAAI,EAAIC,EACjB,GAAI,CACF,aAAa,QAAQX,EAAa,KAAK,UAAUC,CAAQ,CAAC,EAG1D,QAAQ,IAAI,yBAA0BS,EAAMC,EAAO,KAAK,MAAM,aAAa,QAAQX,CAAW,CAAC,CAAC,CACjG,OAAQI,EAAK,CACZ,QAAQ,MAAM,8BAA+BA,CAAG,CACjD,CACF,CAGDL,EAAK,iBAAiB,SAAUS,GAAS,CAOvC,GANAA,EAAM,eAAc,EAGhBH,IAASJ,EAAS,MAAQI,EAAQ,MAAM,QACxCC,IAAWL,EAAS,QAAUK,EAAU,MAAM,QAE9C,CAACL,EAAS,OAAS,CAACA,EAAS,QAAS,CACxC,MAAM,wBAAwB,EAC9B,MACD,CAED,QAAQ,IAAI,mBAAoBA,CAAQ,EAGxC,aAAa,WAAWD,CAAW,EACnCD,EAAK,MAAK,EACVE,EAAW,CAAE,MAAO,GAAI,QAAS,EAAE,CACvC,CAAG,CACH,CAAC"}